class Solution {
  public:
    // Function to detect cycle in an undirected graph.
    
    bool isCycle(int V, vector<int> adj[]) {
    vector<bool> vis(V,0);
    queue<pair<int,int>> q;
    for(int i=0;i<V;i++){
        if(vis[i]==0){
            q.push({i,-1});
            vis[i]=1;
            while(!q.empty()){
                int node=q.front().first;
                int p=q.front().second;
                q.pop();
                for(auto it:adj[node]){
                    if(vis[it]==1 && it!=p) return true;
                    if(vis[it]==0) {
                        vis[it]=1;
                        q.push({it,node});
                    }
                }
            }
        }
    }
    return false;
    }
};
