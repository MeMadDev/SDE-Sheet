class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	//Topo sort using DFS
	void dfs(int node,vector<int> adj[],vector<bool> & vis,stack<int> & help){
	    vis[node]=1;
	    for(auto it: adj[node]){
	        if(vis[it]==0){
	            dfs(it,adj,vis,help);
	        }
	    }
	    help.push(node);
	    return;
	}
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<bool> vis(V,0);
	    stack<int> help ;
	    for(int i=0;i<V;i++){
	        if(vis[i]==0){
	            dfs(i,adj,vis,help);
	        }
	    }
	    
	    vector<int> ans;
	    while(!help.empty()){
	        ans.push_back(help.top());
	        help.pop();
	    }
	    return ans;
	}
};
